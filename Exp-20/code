import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import plotly.io as io
import plotly.express as px
import plotly.graph_objects as go

# ✅ Fix: Change renderer to work in Jupyter Notebook / Colab
io.renderers.default = 'notebook'  # Use 'notebook' or 'colab' instead of 'browser'

# Load Data
data = pd.read_csv("futuresale prediction.csv")

print(data.head())
print(data.sample(5))
print(data.isnull().sum())

# Scatter Plots
figure = px.scatter(data_frame=data, x="Sales", y="TV", size="TV", trendline="ols")
figure.show()

figure = px.scatter(data_frame=data, x="Sales", y="Newspaper", size="Newspaper", trendline="ols")
figure.show()

figure = px.scatter(data_frame=data, x="Sales", y="Radio", size="Radio", trendline="ols")
figure.show()

# Correlation Matrix
correlation = data.corr()
print(correlation["Sales"].sort_values(ascending=False))

# Prepare Data for Training
x = np.array(data.drop(["Sales"], axis=1))  # ✅ Fix: Use axis=1 (not 1)
y = np.array(data["Sales"])

xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=42)

# Train Model
model = LinearRegression()
model.fit(xtrain, ytrain)
print(f"Model Score: {model.score(xtest, ytest):.4f}")

# Prediction
features = np.array([[230.1, 37.8, 69.2]])  # ✅ Fix: Define numeric feature array properly
print(f"Predicted Sales: {model.predict(features)[0]:.2f}")
